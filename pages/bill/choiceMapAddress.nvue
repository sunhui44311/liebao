<template>
	<div>
		<map id="map" :style="{'width':mapWidth+'px','height':mapHeight+'px'}" :latitude="centerPoint.latitude" :longitude="centerPoint.longitude" :scale="scale" @regionchange="onregionchange"></map>
		<image class="center" :style="{'top':centerOffTop+'px','left':centerLeft+'px'}" src="../../static/image/center-location@2x.png"></image>
		<view class="footer">
			<text class="tip">请确认发件地址是否准确，如不准确可拖动地图进行调整</text>
			<view class="content">
				<text class="addr">{{poiName}}</text>
				<view class="detail">
					<image class="detail-icon" src="../../static/image/location@2x.png"></image>
					<text class="detail-info">{{formatted_address}}</text>
				</view>
				<text class="btn" @click.stop="submit">确认地址</text>
			</view>
		</view>
	</div>
</template>

<script>
	export default {
		data(){
			return{
				mapWidth:0,
				mapHeight:0,
				scale:16,
				centerPoint:{
					longitude:0,
					latitude:0
				},
				centerLeft:0,
				centerOffTop:0,
				scale:16,
				mapCtx:null,
				formatted_address:'',
				poiName:'',
				poiModel:{}
			}
		},
		onLoad(options) {
			var location=options.location
			this.centerPoint.longitude=location.split(',')[0]
			this.centerPoint.latitude=location.split(',')[1]
			const res = uni.getSystemInfoSync();
			this.mapWidth=res.windowWidth;
			this.mapHeight=res.windowHeight-186;
			this.centerLeft=this.mapWidth/2.0-15
			this.centerOffTop=this.mapHeight/2.0-30
			this.getDetailAddress(this.centerPoint)
		},
		methods:{
			submit(){
				uni.$emit('selectAddress',this.poiModel)
				uni.navigateBack({
					delta:2
				})
			},
			onregionchange(e){
				var that=this
				this.mapCtx=uni.createMapContext('map',this)
				this.mapCtx.getCenterLocation({
					success:(res)=>{
						console.log(res)
						that.centerPoint.latitude=res.latitude
						that.centerPoint.longitude=res.longitude
						that.getDetailAddress(that.centerPoint)
					}
				})
			},
			
			getDetailAddress(location){
				let that=this
				let params={
					key:'5ae8644771ef9abf9cfb3ea23b1df6ca',
					location:`${location.longitude},${location.latitude}`,
					extensions:'all'
				}
				this.poiModel.lng=location.longitude
				this.poiModel.lat=location.latitude
				console.log(location)
				uni.request({
					url:'https://restapi.amap.com/v3/geocode/regeo',
					method:'GET',
					data:params,
					dataType:'json',
					success({data}) {
						console.log(data)
						let addressComponent=data.regeocode.addressComponent
						that.formatted_address=data.regeocode.formatted_address
						// that.city=addressComponent.city.length==0?addressComponent.province:addressComponent.city
						let aois=data.regeocode.aois.length>0?data.regeocode.aois[0]:''
						that.poiName=aois?aois.name:''
						that.poiModel.address=that.poiName
						that.poiModel.city=addressComponent.city.length==0?addressComponent.province:addressComponent.city
						that.poiModel.province=addressComponent.province
						that.poiModel.district=addressComponent.district
						that.poiModel.street=addressComponent.streetNumber.street+addressComponent.streetNumber.number
						that.poiModel.cityCode=addressComponent.citycode
					}
				})
			},
		}
	}
</script>

<style>
	.footer{
		position: relative;
		margin-top: -30px;
		height: 186px;
		background-color: white;
		border-top-left-radius: 20px;
		border-top-right-radius: 20px;
	}
	.tip{
		background-color: #FFFFEA;
		font-size: 12px;
		color: #E95008;
		height: 30px;
		line-height: 30px;
		border-top-left-radius: 20px;
		border-top-right-radius: 20px;
		text-align: center;
	}
	.content{
		padding: 20px;
	}
	.addr{
		color: #0D1C40;
		font-size:15px;
	}
	.detail{
		flex-direction: row;
		justify-content: flex-start;
		margin-top: 12px;
	}
	.detail-icon{
		width: 15px;
		height: 15px;
		margin-right: 5px;
	}
	.detail-info{
		color: #9FA7B6;
		font-size: 12px;
	}
	.btn{
		background-color: #E95008;
		color: white;
		font-size: 16px;
		height: 45px;
		line-height: 45px;
		text-align: center;
		border-radius: 45px;
		margin-top: 30px;
	}
	.center{
		position: absolute;
		width: 30px;
		height: 30px;
	}
</style>
