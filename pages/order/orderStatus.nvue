<template>
  <view v-if="show">
    <view class="bg" @touchstart="handletouchstart"> </view>
    <div class="pop">
      <view class="pop-nav">
        <view class="close" @click.stop="close">
          <image class="close-img" src="../../static/image/delete.png"></image>
        </view>
        <text class="pop-tlt">订单状态</text>
        <text class="confirm" @click.stop="close">确定</text>
      </view>
      <template v-if="statusArr.length > 0">
        <view v-for="(item, index) in statusArr" :key="index">
          <view class="cell" v-if="index < statusArr.length - 1">
            <view class="cell-left">
              <view class="line"></view>
              <text class="dot"></text>
              <text class="cell-tlt">{{ item.orderStatus | statetext }}</text>
            </view>
            <text class="cell-tlt">{{ item.createTime }}</text>
          </view>
          <view class="cell" v-else>
            <view class="cell-left">
              <view class="lastLine"></view>
              <text class="last-dot"></text>
              <text class="cell-tlt">{{ item.orderStatus | statetext }}</text>
            </view>
            <text class="cell-tlt">{{ item.createTime }}</text>
          </view>
        </view>
      </template>
      <view class="ts" v-else>暂无数据</view>
    </div>
  </view>
</template>

<script>
export default {
  data() {
    return {
      show: false,
    };
  },
  props: {
    statusArr: Array,
  },
  methods: {
    init() {
      this.show = true;
    },
    close() {
      console.warn(this.statusArr);
      this.show = false;
    },
    handletouchstart() {
      this.show = false;
    },
  },
  filters: {
    statetext(e) {
      let arr = [
        {
          key: 1,
          title: "待接单",
        },
        {
          key: 2,
          title: "待取货",
        },
        {
          key: 3,
          title: "配送中",
        },
        {
          key: 4,
          title: "已完成",
        },
        {
          key: "-1",
          title: "已取消",
        },
        {
          key: 0,
          title: "待支付",
        },
      ];
      if (typeof e == "undefined") return "";
      let obj = arr.find((i) => i.key == e);
      return obj.title;
    },
  },
};
</script>

<style>
.box {
  padding: 0px 33px;
  background-color: white;
}
.pop {
  position: fixed;
  left: 0px;
  right: 0px;
  bottom: 0px;
  background-color: white;
  border-top-left-radius: 13px;
  border-top-right-radius: 13px;
}
.bg {
  position: fixed;
  left: 0px;
  right: 0px;
  bottom: 0px;
  top: 0px;
  background-color: #000000;
  opacity: 0.5;
}
.pop-nav {
  flex-direction: row;
  justify-content: center;
  align-items: center;
  padding: 12px 32px;
  position: relative;
}
.pop-tlt {
  color: #0d1c40;
  font-size: 15px;
  text-align: center;
  font-weight: bold;
}
.confirm {
  position: absolute;
  right: 23px;
  color: #fa6f06;
  font-size: 14px;
}
.close {
  width: 40px;
  height: 40px;
  position: absolute;
  left: 32px;
  display: flex;
  justify-content: center;
}
.close-img {
  width: 12px;
  height: 12px;
}
.cell {
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  padding: 0px 23px 0px 33px;
  height: 40px;
  line-height: 40px;
  position: relative;
}
.cell-left {
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}
.dot {
  width: 7px;
  height: 7px;
  border-radius: 7px;
  background-color: #cccccc;
  margin-right: 20px;
  z-index: 9999;
}
.last-dot {
  background-color: #fa6f06;
  width: 7px;
  height: 7px;
  border-radius: 7px;
  margin-right: 20px;
  z-index: 9999;
}
.line {
  background-color: #eeeeee;
  width: 1px;
  height: 40px;
  position: absolute;
  left: 3px;
  top: -10px;
  z-index: 99;
}
.firstLine {
  background-color: #eeeeee;
  width: 1px;
  height: 20px;
  position: absolute;
  left: 3px;
  top: 10px;
  z-index: 99;
}
.lastLine {
  background-color: #eeeeee;
  width: 1px;
  height: 20px;
  position: absolute;
  left: 3px;
  top: -10px;
  z-index: 99;
}
.cell-tlt {
  color: #4d5660;
  font-size: 14px;
}
.cell-money {
  color: #101e3e;
  font-size: 15px;
  font-weight: bold;
}
.ts {
  text-align: center;
  padding: 20upx;
  color: #5c5c5c;
}
</style>
